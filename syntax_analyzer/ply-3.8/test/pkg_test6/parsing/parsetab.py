
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '0B7CA54BA0A88793C5105FA7D7A311EB'
    
_lr_action_items = {'RPAREN':([1,5,6,11,12,13,14,15,16,],[-9,-10,12,-7,-8,-1,-4,-2,-3,]),'DIVIDE':([1,3,5,6,11,12,13,14,15,16,],[-9,8,-10,8,-7,-8,8,-4,8,-3,]),'NUMBER':([0,2,4,7,8,9,10,],[1,1,1,1,1,1,1,]),'TIMES':([1,3,5,6,11,12,13,14,15,16,],[-9,10,-10,10,-7,-8,10,-4,10,-3,]),'PLUS':([1,3,5,6,11,12,13,14,15,16,],[-9,7,-10,7,-7,-8,-1,-4,-2,-3,]),'LPAREN':([0,2,4,7,8,9,10,],[2,2,2,2,2,2,2,]),'$end':([1,3,5,11,12,13,14,15,16,],[-9,0,-10,-7,-8,-1,-4,-2,-3,]),'MINUS':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,],[4,-9,4,9,4,-10,9,4,4,4,4,-7,-8,-1,-4,-2,-3,]),'NAME':([0,2,4,7,8,9,10,],[5,5,5,5,5,5,5,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,2,4,7,8,9,10,],[3,6,11,13,14,15,16,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','expression.py',4),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','expression.py',5),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','expression.py',6),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','expression.py',7),
  ('statement -> NAME EQUALS expression','statement',3,'p_statement_assign','statement.py',4),
  ('statement -> expression','statement',1,'p_statement_expr','statement.py',8),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','expression.py',14),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','expression.py',18),
  ('expression -> NUMBER','expression',1,'p_expression_number','expression.py',22),
  ('expression -> NAME','expression',1,'p_expression_name','expression.py',26),
]
